;<FOONEX>CHARFC.MAC;1 19-Mar-81 14:21:36, Edit by MMCM
;TENEX CONDITIONAL ASSEMBLY

	TITLE CHARFC - CHAOSNET RFC HANDLER DAEMON
	SEARCH PROLOG,MONSYM,MACSYM
	search chadfs
	.REQUIRE SYS:MACREL

ifndef f3flg,<f3flg==0>		;Not TENEX
ifndef klflg,<klflg==1>		;but TOPS-20
define usrsav,<>		;No special case (PROLOG defines some)

IFNDEF DBGSW,<DBGSW==0>		;OFF BY DEFAULT
IF1,<IFN DBGSW,<PRINTX **DEBUGGING VERSION**>>

DEFAC(FKP,Q1)			;FORK TABLE INDEX
DEFAC(PKT,Q3)

;FLAGS IN F
F=13				;DON'T MAKE F SAME AS P1!
DEBUG==1B0			;DEBUGGING HERE; BE VERY VERBOSE

DEFINE EMJRST (L,$MSG) <
	JRST [	MOVE Q2,[POINT 7,[ASCIZ |'$MSG'|]]
		JRST L ]
>

	CLRBEG==.		;START OF AREA CLEARED AT STARTUP
FORKS:	BLOCK 20		;SERVER FORK HANDLES
 NFORKS==.-FORKS
FORKTM:	BLOCK NFORKS		;TIME OF STARTUP
	CLREND==.-1		;END OF CLEARED AREA

RFCJFN:	BLOCK 1
TODCLK:	BLOCK 1
CHASNM:	BLOCK ^D100/5
PDL:	BLOCK 100		;THE USUAL STACK
 PDLLEN==.-PDL
PACKET:	BLOCK ^D512/4		;PACKET BUFFER
LOSPKT:	BLOCK CHPKDT+^D100/4	;LOS PACKET FOR REPLYING UPON STARTUP FAILURE

IFN KLFLG,<			;FOR TOPS20
CRJARG:	0			;CRJOB ARGS: USER
	0			;PASSWORD
	0			;ACCOUNT
	POINT 7,CHASNM		;FILE TO RUN
	0			;SFRKV OFFSET
	.NULIO			;START UP DETACHED
	BLOCK .CJSLO-.CJTTY
>;IFN KLFLG

IFN F3FLG,<			;FOR TENEX
CRJARG:	0			;USER,,PASSWORD
	0			;ACCOUNT
	0,,CHASNM		;SFRKV OFFSET,,FILE TO RUN
	.NULIO			;START UP DETACHED
	0			;CPU LIMIT
	0			;CONNECT TIME LIMIT
	0			;ACS
	0			;FLAGS FOR EXEC
	0			;JFNS	
>;IFN F3FLG

CHARFC:	RESET
	MOVE P,[IOWD PDLLEN,PDL]
	SETZM CLRBEG
	MOVE T1,[CLRBEG,,CLRBEG+1]
	BLT T1,CLREND		;TABULA RASA
	MOVEI PKT,PACKET	;FOR CONVENIENCE
	SETZ F,			;CLEAR FLAGS
IFN DBGSW,<TXO F,DEBUG>		;WHEN DEBUGGING, DROP LOTS OF HINTS
IFE DBGSW,<TXZ F,DEBUG>		;HACK THIS TO TURN INTO DEBUGGING VERSION
	MOVX T1,.FHSLF		;ENABLE ALL CAPAS
	RPCAP
	MOVE T3,T2
	EPCAP
IFN F3FLG,<
	MOVE T1,[SIXBIT /CHARFC/]
	SETNM			;MAKE US VISIBLE
	GJINF			;SEE IF DETACHED ON TENEX
	JUMPGE T4,CHARFT	;HAVE A TTY, NOT SYSTEM JOB
	MOVE T1,[SIXBIT /LOGDES/]
	SYSGT
	HRRZ T1,T2		;TABLE INDEX
	HRLI T1,1		;ENTRY ONE IS CONSOLE TTY
	GETAB
	 MOVEI T1,.NULIO
	HRRZ T2,T1
	HRLI T2,.NULIO
	MOVEI T1,.FHSLF
	SPJFN			;MAKE OUTPUT GO TO CONSOLE TERMINAL
CHARFT:
>;IFN F3FLG
	MOVX T1,GJ%SHT
	HRROI T2,[ASCIZ/CHA:/]	;BECOME THE DISTINGUISHED
	GTJFN			; RFC HANDLER
	 ERMSG <CHARFC: can't get handle on CHA:>
	MOVEM T1,RFCJFN		;SAVE THIS
	MOVEI T4,^D<60*5>	;WAIT QUITE A WHILE FOR THE NET TO START
CHARFW:	MOVE T1,RFCJFN		;GET BACK OUR HANDLE
	MOVX T2,8B5+OF%RD	;OPEN IT UP
	OPENF
	 ERJMP [MOVX T1,.FHSLF	;FIND OUR LAST ERROR
		GETER
		TLZ T2,-1	;CLEAR OUT HANDLE
		CAIN T2,OPNX19	;NET NOT UP?
		 JRST [	MOVX T1,^D1000 ;RIGHT, TRY AGAIN
			DISMS	; AFTER SLEEPING FOR A SECOND
			SOJG T4,CHARFW
			TMSG <
?CHARFC: Chaosnet never came up---I give up.
>
			HALTF ]	;GIVE UP
		TMSG <CHARFC: can't open CHA: for RFC service:
>				;NO, COMPLAIN
		JSHLT ]		; AND GIVE UP

CHARFL:	TIME			;GET NOW
	MOVEM T1,TODCLK		;REMEMBER FOR GCFRK
	move t1,[sixbit /CHARFC/]	;In case a fork changed it
	setnm
	CALL GCFRK		;CLEAR UP ANY FORKS THAT NEED IT
	MOVE T1,RFCJFN		;NOW, GET NEXT UNHANDLED RFC PACKET
	MOVX T2,.MOPKR
	MOVEI T3,(PKT)
	MTOPR
	 ERMSG <CHARFC: RFC packet read failed>
	TIME			;GET NOW, POTENTIALLY MUCH LATER
	MOVEM T1,TODCLK		;REMEMBER FOR FORK CREATION
IFN KLFLG,<
	DMOVE T1,[ASCII /SYSTEM:CHA/]
	DMOVEM T1,CHASNM
	MOVE T1,[ASCIZ /OS./]
	MOVEM T1,CHASNM+2
	MOVE T1,[POINT 7,CHASNM+2,20]
>;IFN KLFLG
IFN F3FLG,<
	DMOVE T1,[ASCII /<SYSTEM>CH/]
	DMOVEM T1,CHASNM
	MOVE T1,[ASCIZ /AOS./]
	MOVEM T1,CHASNM+2
	MOVE T1,[POINT 7,CHASNM+2,27]
>;IFN F3FLG
	MOVEI T2,CHPKDT(PKT)
	HRLI T2,(<POINT 8,>)	;MAKE BYTE POINTER TO CONNECTION NAME
	LOAD T3,CPKNB,(PKT)	;MAXIMUM NUMBER OF CHARACTERS
	CAILE T3,^D39
	 MOVX T3,^D39
CHIF38:	ILDB T4,T2		;COPY IT ALL OVER
	SOJL T3,CHIF39
	CAIG T4,40
	 JRST CHIF39
	IDPB T4,T1
	JRST CHIF38
CHIF39:	MOVEI T4,0		;END WITH NULL
	IDPB T4,T1
	TXNN F,DEBUG		;WHEN DEBUGGING, PRINT THIS INFO
	 JRST CHIF3A
	TMSG <[CHARFC: RFC ">
	MOVX T1,.PRIOU
	MOVEI T2,CHPKDT(PKT)
	HRLI T2,(<POINT 8,>)
	LOAD T3,CPKNB,(PKT)
	MOVN T3,T3
	SOUT
	 ERJMP [TMSG <???>
		ERJMP .+1]
	TMSG <", host >
	MOVX T1,.PRIOU
	LOAD T2,CPKSA,(PKT)	;GET FOREIGN HOST
	MOVX T3,^D8
	NOUT
	 ERJMP [TMSG <???>
		ERJMP .+1]
	TMSG <: >

CHIF3A:	MOVX T1,GJ%OLD!GJ%SHT
	HRROI T2,CHASNM
	GTJFN			;DOES THE FILE EXIST?
	 ERJMP [TMSG <%CHARFC: no server for contact name ">
;ifn 0,<
;		MOVEI T1,CHPKDT(PKT) ;PICK UP NAME
;		HRLI T1,(<POINT 8,>) ; AND TELL ALL ABOUT IT
;		PSOUT
;>
;ife 0,<
		MOVX T1,.PRIOU
		MOVEI T2,CHPKDT(PKT)
		HRLI T2,(<POINT 8,>)
		LOAD T3,CPKNB,(PKT)
		MOVN T3,T3
		SOUT
		 ERJMP [TMSG <???>
			ERJMP .+1]
;>
		TMSG <"
>				;FORGET IT ENTIRELY (THIS STAYS OUT OF
;; Should send a CLS right away
		emjrst chif43,<No server for this contact name>
;;		JRST CHARFL
		]	; THE WAY OF ESTABLISHED SERVERS LIKE SUPDUP)
	MOVE T4,T1		;HOLD ONTO JFN
	MOVE T2,[1,,.FBCTL]	;YES, SEE IF IT IS EPHEMERAL
	MOVEI T3,T2
	GTFDB
	 ERJMP [PERSTR <%CHARFC: GTFDB on server file failed: >
		EMJRST CHIF41,<GTFDB failed>]
IFN KLFLG,<			;FOR TOPS20
	LDB T2,[POINT 4,T2,17]	;GET THE FB%FCF FIELD
	CAIE T2,.FBEPH		;IS IT EPHEMERAL?
>;IFN KLFLG
IFN F3FLG,<			;FOR TENEX
	TLNN T2,FDBEPH		;IS IT EPHEMERAL?
>;IFN F3FLG
	 JRST CHIF40		;NO, MAKE NEW JOB FOR IT
	MOVSI FKP,-NFORKS	;FIND A PLACE TO KEEP IT
	 SKIPE FORKS(FKP)	;IN USE?
	  AOBJN FKP,.-1		;YES, KEEP LOOKING
	TLNN FKP,-1		;DID WE LOOK ALL THE WAY THROUGH?
	 JRST [	TMSG <%CHARFC: no room for server fork
>				;YES, COMPLAIN TO THE WORLD
		EMJRST CHIF41,<No room for server fork> ]; AND REPORT ERROR
	SETZ T1,		;MAKE A FORK
	CFORK
	 ERJMP [PERSTR <%CHARFC: server fork CFORK failed: >
		EMJRST CHIF41,<Server fork creation failed> ] ;FAILED, GIVE UP
	MOVEM T1,FORKS(FKP)	;WORKED; STASH THIS AWAY
	MOVE T3,TODCLK		;GET NOW
	MOVEM T3,FORKTM(FKP)	;REMEMBER WHEN WE STARTED UP THIS FELLOW
	SETO T2,		;GIVE IT ALL CAPABILITIES
	TXZ T2,SC%LOG		;EXCEPT LOGGING OUT!
	SETZ T3,		;ONLY AS POSSIBLITIES
	EPCAP
	HRLZI T1,(T1)		;LOAD IT UP
	HRRI T1,(T4)		;GET BACK JFN
	GET
	 ERJMP [PERSTR <%CHARFC: GET failed for server fork: >
		MOVE T1,FORKS(FKP) ;MIGHT NOT BE .EXE FILE; GET BACK HANDLE
		SETZM FORKS(FKP) ;CLEAN OUT THIS MISBEGOTTEN ENTRY
		KFORK		;GET RID OF THIS FORK
		 ERCAL [PERSTR <%CHARFC: KFORK after bad GET failed: >
			RET]
		EMJRST CHIF41,<Server fork GET failed>]	;GO JOIN CLEANUP CODE
	HLRZ T1,T1		;GET BACK FRK HANDLE
	SETZ T2,		;AND START IT UP
	SFRKV
	TXNN F,DEBUG		;UNLESS DEBUGGING,
	 JRST CHARFL		;BACK FOR MORE
	TMSG <fork >
	MOVX T1,.PRIOU
	HRRZI T2,(FKP)
	MOVX T3,^D8
	NOUT
	 ERJMP .+1
	TMSG < started at >
CHADAT:	MOVX T1,.PRIOU		;DUMP D&T TOO
	MOVX T2,-1		;"NOW"
	MOVX T3,0		;STANDARD FORMAT
	ODTIM
	 ERJMP .+1
	TMSG <]
>
	JRST CHARFL

CHIF40:	RLJFN			;NEEDS OWN JOB, GET RID OF JFN
	 ERJMP [PERSTR <%CHARFC: RLJFN of server file failed: >
		JRST .+1]
IFN KLFLG,<			;FOR TOPS20
 	MOVX T1,CJ%FIL!CJ%CAP
>;IFN KLFLG
IFN F3FLG,<			;FOR TENEX
	MOVE T1,RFCJFN
	MOVEI T2,42
	LOAD T3,CPKSA,(PKT)
	MTOPR
	MOVSI T1,(1B3!1B6!1B12!1B14) ;ASSUME FRIENDLY, NO PASSWORD
	SKIPN T3
	 TLC T1,(1B13!1B14)	;FROM AN UNFRIENDLY HOST, PASSWORD, NO WHEELS
>;IFN F3FLG
	MOVEI T2,CRJARG		;ARGUMENT BLOCK
	CRJOB			;START UP A SERVER
	 ERJMP [PERSTR <%CHARFC: CRJOB for server failed: >
	       EMJRST CHIF41,<Server job creation failed>] ;FAILED
	TXNN F,DEBUG
	 JRST CHARFL		;BACK FOR MORE
	TMSG <job started at >
	JRST CHADAT		;GO JOIN COMMON D&T PRINTER

;COME HERE TO GET RID OF GOTTEN JFN (IN T4)
CHIF41:	HRRZ T1,T4		;GET THE JFN OF THE SERVER FILE
	RLJFN
	 ERJMP .+1		;TOO BAD IF IT FAILS

;HERE TO REPORT THE ERROR TO THE REQUESTOR (ASCIZ ERROR STRING REF IN Q2)
	skipa T1,[.COLOS]	;BUILD THE LOS PACKET
; Here to send CLS instead, without releasing JFN (because we never got one)
chif43:  movei t1,.cocls
	MOVEI T4,LOSPKT		;PACKET REF FOR STRUCTURE REF'ING
	STOR T1,CPKOP,(T4)
	MOVE T1,Q2		;COMPUTE LENGTH OF DATA
	SETZ T3,
	 ILDB T2,T1
	 JUMPE T2,.+3
	 AOS T3
	 JRST .-3
	CAILE T3,^D100		;WILL IT FIT?
	 MOVEI T3,^D100		;TRUNCATE IT
	STOR T3,CPKNB,(T4)
	MOVE T1,Q2		;NOW, MOVE IN ACTUAL DATA
	MOVE T4,[POINT 8,LOSPKT+CHPKDT]
	 ILDB T2,T1
	 SOJL T3,.+3
	 IDPB T2,T4
	 JRST .-3
	MOVE T1,[ASCIZ /CHA:./]	;NOW BUILD NAME TO PICK UP THIS
	MOVEM T1,CHASNM		; POOR LOSING RFC
	MOVE T1,[POINT 7,CHASNM+1]
	MOVEI T2,CHPKDT(PKT)
	HRLI T2,(<POINT 8,>)	;MAKE BYTE POINTER TO CONNECTION NAME
	;; No more than we got in the RFC please
	load t3,cpknb,(pkt)
	caile t3,^d39
	 MOVEI T3,^D39		;MAXIMUM NUMBER OF CHARACTERS
CHIF48:	ILDB T4,T2
	CAIG T4,40
	 JRST CHIF49
	IDPB T4,T1
	SOJG T3,CHIF48
CHIF49:	MOVEI T4,0		;END WITH NULL
	IDPB T4,T1
	MOVX T1,GJ%SHT+GJ%OLD	;PICK IT UP, HOPEFULLY
	HRROI T2,CHASNM
	GTJFN
	 ERJMP CHIF51
	MOVE T4,T1		;SAVE FOR RLJFN LATER
	MOVX T2,8B5+OF%RD+OF%WR+FLD(6,OF%MOD) ;IMMEDIATE-RETURN, PLEASE
	OPENF
	 ERJMP CHIF51		;SOMETHING WENT BADLY WRONG
	MOVEI p1,5		;WAIT UP TO THIS MANY SECONDS FOR RFC
CHIF4A:	MOVE T1,T4		;GET BACK JFN
	GDSTS			;FIND OUT WHAT OUR STATE IT
	 ERJMP CHIF51		;WHOOPS, GET OUT
	CAIE T2,.CSRFC		;HAVE WE SEEN THE RFC YET?
	 CAIN T2,.CSOPN		;OR DID IT GET OPENED (?)
	 JRST CHIF4B		;YES, GO HANDLE IT
	SOJLE p1,[TMSG <%CHARFC: couldn't pick up a failing RFC, state >
		  movei t1,.priou
		  movei t3,8
		  nout
		   erjmp .+1
		  tmsg <
>
		JRST CHIF50]	;OH WELL, WAITED TOO LONG
	MOVX T1,^D1000		;NO, WAIT A WHILE FOR IT TO GET THERE
	DISMS
	JRST CHIF4A
CHIF4B:	MOVX T2,.MOPKS		;JUST REPLY WITH THIS LOS PACKET
	MOVEI T3,LOSPKT
	MTOPR
	 ERJMP [PERSTR <%CHARFC: LOS packet reply failed: >
		JRST .+1]
	CLOSF			;CLOSE DOWN THE FILE
	 ERJMP [PERSTR <%CHARFC: CLOSF on losing RFC connection failed: >
		JRST .+1]
	JRST CHARFL		;BACK FOR MORE

;HERE IF GTJFN OR OPENF FAILS FOR LOSING RFC
CHIF51:	PERSTR <%CHARFC: couldn't pick up outstanding RFC: > ;HERE AFTER ERROR
CHIF50:	MOVE T1,T4		;GET BACK JFN
	RLJFN			;GET RID OF IT
	 ERJMP .+1
	JRST CHARFL

;CLEAN UP OLD OR DEAD FORKS HERE
GCFRK:	SAVEAC <P1,P2,P3>
	MOVSI FKP,-NFORKS	;NOW, SCAN FORKS FOR DEAD ONES, OR OVERDUE ONES
GCLP1:	SKIPN T1,FORKS(FKP)	;ANY FORK HANDLE HERE?
	 JRST GCLPE		;NO, KEEP GOING
	MOVE P3,TODCLK		;YES, SEE HOW OLD IT IS
	SUB P3,FORKTM(FKP)
	CAMG P3,[^D<60*1000>]	;MAKE SURE IT'S AT LEAST A MINUTE
	 JRST GCLPE		; OLD BEFORE BOTHERING IT
	FFORK			;FREEZE IT JUST IN CASE
	 ERJMP [TMSG <%CHARFC: couldn't freeze server fork, continuing...
>
		JRST .+1]
	RFSTS			;YES, READ ITS STATUS
	 ERJMP [PERSTR <%CHARFC: Problems reading server fork status: >
		JRST GCLPC]	;OUCH, UNASSIGNED HANDLE: JUST CLEAR IT OUT
	CAMN T1,[-1]		;ASSIGNED BUT PROCESS HAS BEEN DELETED?
	 JRST [	TMSG <%CHARFC: Server process disappeared
>
		MOVE T1,FORKS(FKP) ;YES, GET BACK HANDLE
		RFRKH		;AND RELEASE THIS NOW-DEFUNCT HANDLE
		 JFCL		;IGNORE MORE ERRORS HERE
		JRST GCLPC ]	;GO GIVE UP ON THIS GUY
	LDB P1,[POINTR T1,RF%STS] ;GET STATUS CODE
	MOVE P2,T2		; AND SAVE PC
	CAIE P1,.RFHLT		;HALTED?
	 CAIN P1,.RFFPT		;OR FORCED TO TERMINATE?
	 JRST GCLPCL		;YES, CLEAN IT UP
	CAMG P3,[^D<60*15*1000>] ;WAS IT SOME LONG TIME AGO?
	 JRST [	MOVE T1,FORKS(FKP) ;NO, LEAVE THIS FELLOW ALONE
		RFORK		;LET IT RIDE ONCE MORE
		 ERJMP [TMSG <%CHARFC: couldn't resume frozen server, continuing...
>
			JRST GCLPE]
		JRST GCLPE ]
	TMSG <%CHARFC: Old server fork lingers on; killing it.
>
	CAIA			;PRINT FORK STATUS
GCLPCL:	 TXNE F,DEBUG		;IF NOT KILLING OR DEBUGGING, SKIP THIS
	 CAIA
	 JRST GCLPC0
	TMSG <%CHARFC: Killing fork >
	MOVX T1,.PRIOU
	HRRZI T2,(FKP)
	MOVX T3,^D8
	NOUT
	 ERJMP .+1
	TMSG < (status: >
	MOVX T1,.PRIOU
	HRRO T2,[EXP [ASCIZ /running/], [ASCIZ \I/O wait\], [ASCIZ /halted/]
		 EXP [ASCIZ /force-frozen/], [ASCIZ /fork wait/]
		 EXP [ASCIZ /sleeping/]
		 EXP [ASCIZ /JSYS trapped/], [ASCIZ /address broken/]
		 ](P1)		;GET STATUS STRING
	MOVX T3,0
	SOUT
	 ERJMP .+1
	TMSG < at >
	MOVX T1,.PRIOU
	HRRZ T2,P2		;GET BACK PC
	MOVX T3,^D8		;OCTAL
	NOUT
	 ERJMP .+1
	TMSG <) at >
	MOVX T1,.PRIOU		;DUMP D&T TOO
	MOVX T2,-1		;"NOW"
	MOVX T3,0		;STANDARD FORMAT
	ODTIM
	 ERJMP .+1
	TXNN F,DEBUG		;ONLY PRINT THIS ADDITIONAL INFO
	 JRST GCLPCE
	TMSG <, FORKTM: >
	MOVX T1,.PRIOU
	MOVE T2,FORKTM(FKP)	;GET TIME OF START
	MOVX T3,^D10
	NOUT
	 ERJMP .+1
	TMSG <, TODCLK: >
	MOVX T1,.PRIOU
	MOVE T2,TODCLK
	MOVX T3,^D10
	NOUT
	 ERJMP .+1
GCLPCE:	TMSG <
>

GCLPC0:	MOVE T1,FORKS(FKP)	;GET BACK HANDLE
	KFORK			;TRY TO KILL IT OFF
	 ERJMP [PERSTR <%CHARFC: Problems killing server fork: >
		JRST .+1]	;COMPLAIN BUT GO ON IF PROBLEMS
GCLPC:	SETZM FORKS(FKP)	;DONE WITH THIS FORK
GCLPE:	AOBJN FKP,GCLP1		;CHECK ALL FORKS
	RET			;DONE

	END CHARFC
